{"version":3,"sources":["components/Paper.tsx","utils/classnames.tsx","components/Input.tsx","components/Option.tsx","components/Select.tsx","hooks/useClickOutside.ts","components/CheckBox.tsx","validation/validation.ts","utils/bind.tsx","utils/constant.ts","views/RegistrationForm.tsx","utils/parsephone.tsx","App.tsx","index.tsx"],"names":["Paper","props","className","children","classnames","classObj","Object","entries","filter","value","Boolean","map","key","join","Input","React","doValidate","setDoValidate","labelClass","isRequired","validateMessage","inputClass","input","ref","inputRef","label","name","type","inputType","placeholder","onChange","onInputChange","onClick","onKeyDown","readOnly","autoComplete","onBlur","hidden","Option","optionClass","isSelected","isHighlighted","onRef","onMouseEnter","onHover","filterOptions","toArray","reduce","acc","node","Select","handler","searched","setSearched","isOpen","setIsOpen","currentElementIndex","setCurrentElementIndex","liRef","rootRef","valueByIndex","index","childByIndex","find","element","elementIndex","indexByValue","search","array","childValues","child","item","toLowerCase","indexOf","matchIndex","length","bestMatchIndex","current","i","arr","scrollIntoView","block","behavior","listener","event","target","Node","contains","document","addEventListener","removeEventListener","chooseOption","onOptionClick","dropdownClass","select","childrenCount","count","preventDefault","chooseOptionByIndex","String","additionalProps","push","renderOptions","CheckBox","validators","Name","addRule","Email","Phone","Required","rule","prop","message","_","constructor","ruleConfig","propConfig","validationMessages","messages","targetValidator","keys","forEach","stateValue","test","isValid","state","Bind","_2","descriptor","original","enumerable","configurable","get","bind","this","languages","code","RegistrationForm","email","phone","language","agreement","triedSubmitted","setState","prevState","valid","console","log","Number","Array","from","symbol","isNaN","buttonClass","button","href","handleCheckboxChange","submitHandler","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AM,KACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,kBAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,MACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,MACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,aAET,CACE+H,KAAM,KACN/H,MAAO,aAET,CACE+H,KAAM,KACN/H,MAAO,QAET,CACE+H,KAAM,KACN/H,MAAO,cAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,WAET,CACE+H,KAAM,KACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,WAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,sBAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,OAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,WAET,CACE+H,KAAM,KACN/H,MAAO,cAET,CACE+H,KAAM,KACN/H,MAAO,iBAET,CACE+H,KAAM,KACN/H,MAAO,cAET,CACE+H,KAAM,KACN/H,MAAO,YAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,aAET,CACE+H,KAAM,KACN/H,MAAO,WAET,CACE+H,KAAM,KACN/H,MAAO,SAET,CACE+H,KAAM,KACN/H,MAAO,WAET,CACE+H,KAAM,KACN/H,MAAO,aAET,CACE+H,KAAM,KACN/H,MAAO,qBAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN/H,MAAO,aAET,CACE+H,KAAM,KACN/H,MAAO,UAET,CACE+H,KAAM,KACN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","file":"static/js/main.a39e701c.chunk.js","sourcesContent":["import * as React from 'react'\nimport './Paper.scss'\n\ninterface PaperProps {\n  children: React.ReactNode;\n}\n\nconst Paper: React.FC<PaperProps> = (props) => {\n  return (\n    <div className=\"paper\">\n      { props.children }\n    </div>\n  )\n}\n\nexport { Paper }\n","export const classnames = (classObj: Record<string, boolean>) =>\n  Object.entries(classObj)\n    .filter(([key, value]) => Boolean(value))\n    .map(([key, value]) => key)\n    .join(' ')\n","import * as React from 'react'\nimport { classnames } from 'utils/classnames'\nimport './Input.scss'\n\ninterface InputProps {\n  name?: string;\n  label?: string;\n  inputType: string;\n  placeholder?: string;\n  validateMessage?: string;\n  doValidate?: boolean;\n  value?: string;\n  autoComplete?: 'on' | 'off';\n  readOnly?: boolean;\n  onInputChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  children?: React.ReactNode;\n  onClick?: () => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n  inputRef?: React.LegacyRef<HTMLLabelElement>;\n  isRequired?: true;\n}\n\nconst Input: React.FC<InputProps> = (props) => {\n  const [doValidate, setDoValidate] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    if (props.doValidate) setDoValidate(props.doValidate)\n  }, [props.doValidate])\n\n  const labelClass = classnames({\n    'input-group__label': true,\n    'input-group__label--required': Boolean(props.isRequired),\n    'input-group__label--required-valid': Boolean(props.isRequired) && doValidate && !props.validateMessage\n  })\n\n  const inputClass = classnames({\n    'input-group__input': true,\n    input: true,\n    'text-input': true,\n    'input--valid': doValidate && !props.validateMessage,\n    'input--invalid': doValidate && !!props.validateMessage\n  })\n\n  return (\n    <label className=\"input-group form__group\" ref={props.inputRef}>\n      <div className={labelClass}>\n        <span className=\"text-label\">{props.label}</span>\n      </div>\n      <input\n        className={inputClass}\n        name={props.name}\n        type={props.inputType}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={props.onInputChange}\n        onClick={props.onClick}\n        onKeyDown={props.onKeyDown}\n        readOnly={props.readOnly}\n        autoComplete={props.autoComplete}\n        onBlur={() => setDoValidate(true)}\n      />\n      <span className=\"input-group__message text-danger\" hidden={!(doValidate && props.validateMessage)}>\n        <span className=\"input-group__message-icon\"></span>\n        {props.validateMessage}\n      </span>\n      {props.children}\n    </label>\n  )\n}\n\nexport { Input }\n","import * as React from 'react'\nimport { classnames } from 'utils/classnames'\nimport './Option.scss'\n\nexport interface OptionProps {\n  onClick?: (value: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n  onHover?: () => void;\n  onRef?: (ref: HTMLLIElement) => void;\n  isSelected?: boolean;\n  isHighlighted?: boolean;\n  value: string;\n}\n\nexport const isOption = (node: React.ReactNode): node is React.FunctionComponentElement<OptionProps> => {\n  return true\n}\n\nconst Option: React.FC<OptionProps> = (props) => {\n  const optionClass = classnames({\n    'select-option': true,\n    'text-select': true,\n    'select-option--selected': Boolean(props.isSelected),\n    'select-option--highlighted': Boolean(props.isHighlighted && !props.isSelected)\n  })\n\n  return (\n    <li className={optionClass}\n      ref={props.onRef}\n      onClick={props.onClick}\n      onMouseEnter={props.onHover}\n    >\n      {props.children}\n    </li>\n  )\n}\n\nexport default Option\n","import * as React from 'react'\nimport { classnames } from 'utils/classnames'\nimport { Input } from './Input'\nimport { isOption, OptionProps } from './Option'\nimport { useClickOutside } from 'hooks/useClickOutside'\nimport './Select.scss'\n\ninterface SelectProps {\n  name?: string;\n  label?: string;\n  placeholder?: string;\n  validateMessage?: string;\n  doValidate?: boolean;\n  requiredMessage?: string;\n  children?: React.ReactNode;\n  value?: string;\n  onOptionClick: (value: string) => void;\n  isRequired?: true\n}\n\nconst filterOptions = (children: React.ReactNode): React.FunctionComponentElement<OptionProps>[] => React.Children.toArray(children)\n  .reduce<React.FunctionComponentElement<OptionProps>[]>((acc, node) => isOption(node) ? [...acc, node] : acc, [])\n\nconst searchedStringIndex = (search: string, array: string[]): number => {\n  return array.map(item => item\n    .toLowerCase()\n    .indexOf(search?.toLowerCase())\n  )\n    .map((matchIndex) => (matchIndex !== -1 ? matchIndex : array.length))\n    .reduce((bestMatchIndex, current, i, arr) => (\n      current < arr[bestMatchIndex] ? i : bestMatchIndex), 0)\n}\n\nconst Select: React.FC<SelectProps> = (props) => {\n  const [searched, setSearched] = React.useState<string>('')\n  const [isOpen, setIsOpen] = React.useState<boolean>(false)\n  const [currentElementIndex, setCurrentElementIndex] = React.useState<number>(0)\n  const liRef = React.useRef<HTMLLIElement[]>([])\n  const rootRef = React.useRef<HTMLLabelElement>(null)\n\n  const valueByIndex = React.useCallback((index: number): string | undefined => {\n    const children = filterOptions(props.children)\n    const childByIndex = children.find((element, elementIndex) => elementIndex === index)\n    return childByIndex?.props.value\n  }, [props.children])\n\n  const indexByValue = React.useCallback((value: string): number => {\n    const children = filterOptions(props.children)\n    const childValues = React.Children.map(children, (child) => child.props.value)\n    return searchedStringIndex(value, childValues)\n  }, [props.children])\n\n  React.useEffect(() => {\n    liRef.current[currentElementIndex]?.scrollIntoView({\n      block: 'nearest',\n      behavior: searched ? 'auto' : 'smooth'\n    })\n  }, [currentElementIndex, searched])\n\n  useClickOutside(rootRef, () => setIsOpen(false))\n\n  React.useEffect(() => {\n    if (searched) setCurrentElementIndex(indexByValue(searched))\n  }, [searched, indexByValue])\n\n  const chooseOption = (value: string) => {\n    setIsOpen(false)\n    props.onOptionClick(value)\n    setSearched('')\n  }\n\n  const renderOptions = () => {\n    const children = filterOptions(props.children)\n\n    return React.Children.map(children, (child, index) => {\n      const additionalProps: Pick<OptionProps, 'onClick' | 'onHover' | 'onRef' | 'isSelected' | 'isHighlighted'> = {\n        onClick: (event) => {\n          event.preventDefault()\n          chooseOption(child.props.value)\n        },\n        onHover: () => {\n          setCurrentElementIndex(index)\n        },\n        onRef: (ref) => liRef.current.push(ref),\n        isSelected: child.props.value === props.value,\n        isHighlighted: index === currentElementIndex\n      }\n\n      return React.cloneElement(child, additionalProps)\n    })\n  }\n\n  const chooseOptionByIndex = (index: number) => {\n    const value = valueByIndex(index)\n    if (value) {\n      setIsOpen(false)\n      chooseOption(value)\n    }\n  }\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (isOpen) {\n      const childrenCount = React.Children.count(props.children)\n      switch (event.key) {\n        case 'Escape':\n          setIsOpen(false)\n          return\n        case 'ArrowDown':\n          setCurrentElementIndex(currentElementIndex + 1 >= childrenCount ? childrenCount - 1 : currentElementIndex + 1)\n          return\n        case 'ArrowUp':\n          setCurrentElementIndex(currentElementIndex - 1 < 0 ? 0 : currentElementIndex - 1)\n          return\n        case 'Enter':\n          event.preventDefault()\n          chooseOptionByIndex(currentElementIndex)\n          return\n        case 'Backspace':\n          props.onOptionClick('')\n          return\n        default:\n          return\n      }\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      setIsOpen(!isOpen)\n    }\n  }\n\n  const dropdownClass = classnames({\n    select: true,\n    'select--open': isOpen\n  })\n\n  return (\n    <Input\n      name={props.name}\n      label={props.label}\n      inputType=\"text\"\n      value={props.value || searched}\n      placeholder={props.placeholder}\n      validateMessage={props.validateMessage}\n      doValidate={props.doValidate}\n      onClick={() => setIsOpen(!isOpen)}\n      onKeyDown={handleKeyDown}\n      onInputChange={(event) => setSearched(String(event.target.value))}\n      autoComplete=\"off\"\n      readOnly={!isOpen}\n      inputRef={rootRef}\n      isRequired={props.isRequired}\n    >\n      <div className={dropdownClass}>\n        {props.children && (\n          <div className=\"select__dropdown\">\n            <ul className=\"select__dropdown-list\">\n              {renderOptions()}\n            </ul>\n          </div>\n        )}\n      </div>\n    </Input>\n  )\n}\n\nexport { Select }\n","import * as React from 'react'\n\nexport const useClickOutside = <T extends Element>(ref: React.RefObject<T>, handler: (e: Event) => void): void => {\n  React.useEffect(() => {\n    const listener = (event: Event) => {\n      const target = event?.target\n      if (!ref.current || !(target instanceof Node) || ref.current.contains(target)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [ref, handler])\n}\n","import * as React from 'react'\nimport './CheckBox.scss'\n\ninterface CheckBoxProps {\n  children: React.ReactNode;\n  onInputChange: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nconst CheckBox: React.FC<CheckBoxProps> = (props) => {\n  return (\n    <label className=\"checkbox form__group\">\n      <input className=\"checkbox__input\" type=\"checkbox\" value=\"true\" onChange={props.onInputChange}/>\n      <span className=\"checkbox__box\"></span>\n      <span className=\"text-label\">\n        {props.children}\n      </span>\n    </label>\n  )\n}\n\nexport { CheckBox }\n","/* validators */\n\ntype RuleType = 'name' | 'email' | 'phone' | 'required'\n\ntype RuleConfig = {\n  rule: RuleType,\n  message: string\n}\n\ntype PropConfig = {\n  [prop: string]: RuleConfig[]\n}\n\ninterface ValidatorConfig {\n  [target: string]: PropConfig\n}\n\nconst validators: ValidatorConfig = {}\n\n/* decorator functions */\n\nconst Name = addRule('name')\nconst Email = addRule('email')\nconst Phone = addRule('phone')\nconst Required = addRule('required')\n\nfunction addRule(rule: RuleType) {\n  return function(prop: string, message: string) {\n    return function(target: any, _: string) {\n      target = target.constructor.name\n      const ruleConfig = { rule, message }\n      const propConfig = validators[target]?.[prop]?.filter(ruleConfig => ruleConfig.rule !== rule) || []\n      propConfig.push(ruleConfig)\n      validators[target] = {\n        ...validators[target],\n        [prop]: propConfig\n      }\n    }\n  }\n}\n\ntype MessageConfig = {[K in keyof PropConfig]: string}\n\nfunction validationMessages(target: any): MessageConfig | undefined {\n  let messages: ReturnType<typeof validationMessages>\n  const targetValidator = validators[target.constructor.name]\n  Object.keys(targetValidator).forEach(prop => {\n    targetValidator[prop].forEach(ruleConfig => {\n      if (!messages?.[prop]) {\n        if (!isValid(target.state[prop], ruleConfig.rule)) {\n          messages = { ...messages, [prop]: ruleConfig.message }\n        }\n      }\n    })\n  })\n  return messages\n}\n\nfunction isValid(stateValue: any, rule: RuleType): boolean {\n  if (rule === 'name') {\n    const re = /^[a-zA-ZЁёА-я -]*$/\n    return re.test(String(stateValue))\n  }\n  if (rule === 'email') {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(String(stateValue).toLowerCase())\n  }\n  if (rule === 'phone') {\n    const re = /^\\+?\\d([()-]?\\d){10}$/\n    return re.test(String(stateValue))\n  }\n  if (rule === 'required') {\n    return !!stateValue\n  }\n  return true\n}\n\nexport {\n  Name,\n  Email,\n  Phone,\n  Required,\n  validationMessages\n}\n","/* Use as decorator @Bind */\n\nexport function Bind(_: any, _2: any, descriptor: PropertyDescriptor): PropertyDescriptor {\n  const original = descriptor.value\n  return {\n    enumerable: false,\n    configurable: true,\n    get() {\n      return original.bind(this)\n    }\n  }\n}\n","import { Languages } from 'models/Languages'\n\nexport const languages: Languages[] = [\n  {\n    code: 'af',\n    value: 'Afrikaans'\n  },\n  {\n    code: 'sq',\n    value: 'Albanian'\n  },\n  {\n    code: 'am',\n    value: 'Amharic'\n  },\n  {\n    code: 'ar',\n    value: 'Arabic'\n  },\n  {\n    code: 'hy',\n    value: 'Armenian'\n  },\n  {\n    code: 'az',\n    value: 'Azerbaijani'\n  },\n  {\n    code: 'eu',\n    value: 'Basque'\n  },\n  {\n    code: 'be',\n    value: 'Belarusian'\n  },\n  {\n    code: 'bn',\n    value: 'Bengali'\n  },\n  {\n    code: 'bs',\n    value: 'Bosnian'\n  },\n  {\n    code: 'bg',\n    value: 'Bulgarian'\n  },\n  {\n    code: 'ca',\n    value: 'Catalan'\n  },\n  {\n    code: 'ny',\n    value: 'Chichewa'\n  },\n  {\n    code: 'zh',\n    value: 'Chinese'\n  },\n  {\n    code: 'co',\n    value: 'Corsican'\n  },\n  {\n    code: 'hr',\n    value: 'Croatian'\n  },\n  {\n    code: 'cs',\n    value: 'Czech'\n  },\n  {\n    code: 'da',\n    value: 'Danish'\n  },\n  {\n    code: 'nl',\n    value: 'Dutch'\n  },\n  {\n    code: 'en',\n    value: 'English'\n  },\n  {\n    code: 'eo',\n    value: 'Esperanto'\n  },\n  {\n    code: 'et',\n    value: 'Estonian'\n  },\n  {\n    code: 'fil',\n    value: 'Filipino'\n  },\n  {\n    code: 'fi',\n    value: 'Finnish'\n  },\n  {\n    code: 'fr',\n    value: 'French'\n  },\n  {\n    code: 'fy',\n    value: 'Frisian'\n  },\n  {\n    code: 'gl',\n    value: 'Galician'\n  },\n  {\n    code: 'ka',\n    value: 'Georgian'\n  },\n  {\n    code: 'de',\n    value: 'German'\n  },\n  {\n    code: 'el',\n    value: 'Greek'\n  },\n  {\n    code: 'gu',\n    value: 'Gujarati'\n  },\n  {\n    code: 'ht',\n    value: 'Haitian Creole'\n  },\n  {\n    code: 'ha',\n    value: 'Hausa'\n  },\n  {\n    code: 'haw',\n    value: 'Hawaiian'\n  },\n  {\n    code: 'he',\n    value: 'Hebrew'\n  },\n  {\n    code: 'hi',\n    value: 'Hindi'\n  },\n  {\n    code: 'hmn',\n    value: 'Hmong'\n  },\n  {\n    code: 'hu',\n    value: 'Hungarian'\n  },\n  {\n    code: 'is',\n    value: 'Icelandic'\n  },\n  {\n    code: 'ig',\n    value: 'Igbo'\n  },\n  {\n    code: 'id',\n    value: 'Indonesian'\n  },\n  {\n    code: 'ga',\n    value: 'Irish'\n  },\n  {\n    code: 'it',\n    value: 'Italian'\n  },\n  {\n    code: 'jp',\n    value: 'Japanese'\n  },\n  {\n    code: 'jv',\n    value: 'Javanese'\n  },\n  {\n    code: 'kn',\n    value: 'Kannada'\n  },\n  {\n    code: 'kk',\n    value: 'Kazakh'\n  },\n  {\n    code: 'km',\n    value: 'Khmer'\n  },\n  {\n    code: 'ko',\n    value: 'Korean'\n  },\n  {\n    code: 'ku',\n    value: 'Kurdish (Kurmanji)'\n  },\n  {\n    code: 'ky',\n    value: 'Kyrgyz'\n  },\n  {\n    code: 'lo',\n    value: 'Lao'\n  },\n  {\n    code: 'la',\n    value: 'Latin'\n  },\n  {\n    code: 'lv',\n    value: 'Latvian'\n  },\n  {\n    code: 'lt',\n    value: 'Lithuanian'\n  },\n  {\n    code: 'lb',\n    value: 'Luxembourgish'\n  },\n  {\n    code: 'mk',\n    value: 'Macedonian'\n  },\n  {\n    code: 'mg',\n    value: 'Malagasy'\n  },\n  {\n    code: 'ms',\n    value: 'Malay'\n  },\n  {\n    code: 'ml',\n    value: 'Malayalam'\n  },\n  {\n    code: 'mt',\n    value: 'Maltese'\n  },\n  {\n    code: 'mi',\n    value: 'Maori'\n  },\n  {\n    code: 'mr',\n    value: 'Marathi'\n  },\n  {\n    code: 'mn',\n    value: 'Mongolian'\n  },\n  {\n    code: 'my',\n    value: 'Myanmar (Burmese)'\n  },\n  {\n    code: 'ne',\n    value: 'Nepali'\n  },\n  {\n    code: 'no',\n    value: 'Norwegian'\n  },\n  {\n    code: 'os',\n    value: 'Pashto'\n  },\n  {\n    code: 'fa',\n    value: 'Persian'\n  },\n  {\n    code: 'po',\n    value: 'Polish'\n  },\n  {\n    code: 'pt',\n    value: 'Portuguese'\n  },\n  {\n    code: 'pa',\n    value: 'Punjabi'\n  },\n  {\n    code: 'ro',\n    value: 'Romanian'\n  },\n  {\n    code: 'ru',\n    value: 'Russian'\n  },\n  {\n    code: 'sm',\n    value: 'Samoan'\n  },\n  {\n    code: 'gd',\n    value: 'Scots Gaelic'\n  },\n  {\n    code: 'sr',\n    value: 'Serbian'\n  },\n  {\n    code: 'sn',\n    value: 'Shona'\n  },\n  {\n    code: 'sd',\n    value: 'Sindhi'\n  },\n  {\n    code: 'si',\n    value: 'Sinhala'\n  },\n  {\n    code: 'sk',\n    value: 'Slovak'\n  },\n  {\n    code: 'sl',\n    value: 'Slovenian'\n  },\n  {\n    code: 'so',\n    value: 'Somali'\n  },\n  {\n    code: 'es',\n    value: 'Spanish'\n  },\n  {\n    code: 'su',\n    value: 'Sundanese'\n  },\n  {\n    code: 'sw',\n    value: 'Swahili'\n  },\n  {\n    code: 'sv',\n    value: 'Swedish'\n  },\n  {\n    code: 'tg',\n    value: 'Tajik'\n  },\n  {\n    code: 'ta',\n    value: 'Tamil'\n  },\n  {\n    code: 'te',\n    value: 'Telugu'\n  },\n  {\n    code: 'th',\n    value: 'Thai'\n  },\n  {\n    code: 'tr',\n    value: 'Turkish'\n  },\n  {\n    code: 'uk',\n    value: 'Ukrainian'\n  },\n  {\n    code: 'ur',\n    value: 'Urdu'\n  },\n  {\n    code: 'uz',\n    value: 'Uzbek'\n  },\n  {\n    code: 'vi',\n    value: 'Vietnamese'\n  },\n  {\n    code: 'cy',\n    value: 'Welsh'\n  },\n  {\n    code: 'xh',\n    value: 'Xhosa'\n  },\n  {\n    code: 'yi',\n    value: 'Yiddish'\n  },\n  {\n    code: 'yo',\n    value: 'Yoruba'\n  },\n  {\n    code: 'zu',\n    value: 'Zulu'\n  }\n]\n","import * as React from 'react'\nimport './RegistrationForm.scss'\nimport { Select } from 'components/Select'\nimport { CheckBox } from 'components/CheckBox'\nimport { Input } from 'components/Input'\nimport { Name, Email, Phone, Required, validationMessages } from 'validation/validation'\nimport { classnames } from 'utils/classnames'\nimport { Bind } from 'utils/bind'\nimport { languages } from 'utils/constant'\nimport Option from 'components/Option'\nimport { parsePhone } from 'utils/parsephone'\n\ninterface RegistrationFormState {\n  name: string,\n  email: string,\n  phone: string,\n  language: string,\n  agreement: boolean,\n  triedSubmitted: boolean\n}\n\nclass RegistrationForm extends React.Component<{}, RegistrationFormState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      language: '',\n      agreement: false,\n      triedSubmitted: false\n    }\n  }\n\n  @Bind\n  handleCheckboxChange() {\n    this.setState((prevState) => {\n      const agreement = !prevState.agreement\n      return { agreement }\n    })\n  }\n\n  @Bind\n  submitHandler(event: React.FormEvent, valid: boolean) {\n    event.preventDefault()\n    if (valid) {\n      console.log(\n        'name:', this.state.name,\n        '\\nemail:', this.state.email,\n        '\\nphone:', parsePhone(this.state.phone),\n        '\\nlanguage:', this.state.language\n      )\n    } else {\n      this.setState({ triedSubmitted: true })\n    }\n  }\n\n  /* @Rule(state.prop, message) */\n  @Required('agreement', '')\n  @Required('language', 'Выберите язык')\n  @Name('name', 'Введено не корректное имя')\n  @Required('name', 'Поле имя не может быть пустым')\n  @Email('email', 'Введен не корректный email')\n  @Required('email', 'Поле email не может быть пустым')\n  @Phone('phone', 'Введен не корректный номера телефона')\n  @Required('phone', 'Укажите номер телефона')\n  render() {\n    const messages = validationMessages(this)\n    const valid = !messages\n\n    const buttonClass = classnames({\n      button: true,\n      'button--disabled': !valid,\n      'text-button-regular': valid,\n      'text-button-disabled': !valid\n    })\n\n    return (\n      <form className=\"form\">\n        <div className=\"header form__header\">\n          <h1 className=\"header__title text-title-regular\">Регистрация</h1>\n          <span className=\"header__subtitle text-subtitle\">\n            Уже есть аккаунт?\n            <a className=\"header__subtitle-link link\" href=\"/\" target=\"_blank\">\n              Войти\n            </a>\n          </span>\n        </div>\n        <Input\n          name=\"name\"\n          label=\"Имя\"\n          inputType=\"text\"\n          placeholder=\"Введите ваше имя\"\n          validateMessage={messages?.name}\n          doValidate={this.state.triedSubmitted}\n          onInputChange={(event) => this.setState({ name: event.target.value })}\n          value={this.state.name}\n          isRequired\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          inputType=\"email\"\n          placeholder=\"Введите ваш email\"\n          validateMessage={messages?.email}\n          doValidate={this.state.triedSubmitted}\n          onInputChange={(event) => this.setState({ email: event.target.value })}\n          value={this.state.email}\n          isRequired\n        />\n        <Input\n          name=\"phone\"\n          label=\"Номер телефона\"\n          inputType=\"tel\"\n          placeholder=\"Введите номер телефона\"\n          validateMessage={messages?.phone}\n          doValidate={this.state.triedSubmitted}\n          onInputChange={(event) => this.setState({ phone: String(event.target.value) })}\n          value={this.state.phone}\n          isRequired\n        />\n        <Select\n          name=\"language\"\n          label=\"Язык\"\n          placeholder=\"Язык\"\n          validateMessage={messages?.language}\n          doValidate={this.state.triedSubmitted}\n          value={this.state.language ?? ''}\n          onOptionClick={(language) => this.setState({ language })}\n          isRequired\n        >\n          {languages.map((language) => <Option key={language.code} value={language.value}>{language.value}</Option>)}\n        </Select>\n        <CheckBox\n          onInputChange={this.handleCheckboxChange}\n        >\n          Принимаю&nbsp;\n          <a className=\"link\" href=\"/\" target=\"_blank\">условия</a>\n          &nbsp;использования\n        </CheckBox>\n        <button className={buttonClass} type=\"submit\" onClick={(event) => this.submitHandler(event, valid)}>Зарегистрироваться</button>\n      </form>\n    )\n  }\n}\n\nexport { RegistrationForm }\n","export const parsePhone = (phone: string): number => {\n  return Number(Array\n    .from(phone)\n    .filter(symbol => !Number.isNaN(Number(symbol)))\n    .join('')\n  )\n}\n","import { Paper } from 'components/Paper'\nimport { RegistrationForm } from 'views/RegistrationForm'\n\nfunction App() {\n  return (\n    <Paper>\n      <div className=\"paper__form\">\n        <RegistrationForm />\n      </div>\n    </Paper>\n  )\n}\n\nexport { App }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'index.scss'\nimport 'styles/utils.scss'\nimport 'styles/typography.scss'\nimport { App } from 'App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}